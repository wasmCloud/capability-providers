# Replace all occurrences of "PROVIDER" with the provider name (e.g. HTTPCLIENT)
# Replace all occurrences of "provider" with the folder name of the provider (e.g. `provider`, `httpclient`, etc)
name: PROVIDER-RELEASE

on:
  push:
    tags:
    - 'provider-v*'

env:
  CARGO_TERM_COLOR: always
  working-directory: ./provider
  WASH_ISSUER_KEY: ${{ secrets.WASMCLOUD_ACCOUNT_OFFICIAL }}
  WASH_SUBJECT_KEY: ${{ secrets.WASMCLOUD_PROVIDER }}
  WASH_REG_USER:  ${{ secrets.AZURECR_PUSH_USER }}
  WASH_REG_PASSWORD:  ${{ secrets.AZURECR_PUSH_PASSWORD }}
  REVISION: ${{ github.run_number }}

jobs:
  rust_check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - id: rust-check-action
      uses: wasmcloud/common-actions/rust-check@main
      with:
        working-directory: ${{ env.working-directory }}

  github_release:
    needs: rust_check
    runs-on: ubuntu-latest
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: true

  artifact_release:
    needs: github_release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: wasmcloud/common-actions/install-tooling@main
        with:
          wash: true
          cross: true
      - name: Build full provider archive
        run: make par-full
        working-directory: ${{ env.working-directory }}
      # Push artifact to https://AZURECR/provider:VERSION
      - name: Push provider archive to AzureCR
        run: |
          VERSION=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[].version')
          NAME=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[].name')
          TAGNAME=$(echo $NAME | sed 's/wasmcloud-provider-//')
          URL=${{secrets.AZURECR_PUSH_URL}}/$TAGNAME:$VERSION
          wash reg push $URL build/$NAME.par.gz
        working-directory: ${{ env.working-directory }}
