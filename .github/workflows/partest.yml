name: HTTPCLIENT

on:
  push:
    branches: [ main ]
    tags:
    - 'httpclient-v*'
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  working-directory: ./httpclient
  WASH_ISSUER_KEY: ${{ secrets.WASMCLOUD_ACCOUNT_OFFICIAL }}
  WASH_SUBJECT_KEY: ${{ secrets.WASMCLOUD_HTTPCLIENT }}

jobs:
  rust_check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - id: run-nats
      uses: wasmcloud/common-actions/run-nats@main

  build_artifact:
    needs: rust_check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: wasmcloud/common-actions/install-wash@main
      - uses: wasmcloud/common-actions/install-cross@main

      - name: Build full provider archive
        run: |
          mkdir -p build
          wash reg pull wasmcloud.azurecr.io/httpserver:0.13.1 --destination build/httpclient.par.gz -o json
        working-directory: ${{ env.working-directory }}
      
      - name: Upload provider archive to GH Actions
        uses: actions/upload-artifact@v2
        with:
          name: provider-archive
          path: ${{ env.working-directory }}/build/*.par.gz

  github_release:
    needs: build_artifact
    runs-on: ubuntu-latest
    steps:
    - name: Download provider archive
      uses: actions/download-artifact@v2
      with:
        name: provider-archive
        path: ${{ env.working-directory }}/build

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ env.working-directory }}/build/*.par.gz
        token: ${{ secrets.GITHUB_TOKEN }}
        prerelease: true
        draft: false
        tag_name: testrelease

  artifact_release:
    needs: build_artifact
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download provider archive
        uses: actions/download-artifact@v2
        with:
          name: provider-archive
          path: ${{ env.working-directory }}/build

      - name: Determine artifact metadata
        run: |
          echo "oci-repository=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[].name' | sed 's/wasmcloud-provider-//')" >> $GITHUB_ENV
          echo "oci-version=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[].version')" >> $GITHUB_ENV
        working-directory: ${{ env.working-directory }}