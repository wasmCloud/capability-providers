name: Rust

on:
  push:
    branches: [ main ]
    paths:
    - "PROVIDER/**"
  pull_request:
    branches: [ main ]
    paths:
    - "PROVIDER/**"

env:
  CARGO_TERM_COLOR: always
  working-directory: ./PROVIDER

jobs:
  cargo_check:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --verbose
      working-directory: ${{env.working-directory}}
    - name: Run tests
      run: cargo test --verbose
      working-directory: ${{env.working-directory}}
    - name: Check fmt
      run: cargo fmt -- --check
      working-directory: ${{env.working-directory}}

  clippy_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: rustup component add clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
        working-directory: ${{env.working-directory}}

  build_par:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: rustup add target x86_64-unknown-linux-gnu
#      - run: rustup add target x86_64-apple-darwin
      - run: cargo install --git https://github.com/wascc/wash --branch main --force #TODO: install from specific tag
      - run: cargo install cross # TODO: From chris's repo / PR
      - name: build-linux
        run: cross build --target x86_64-unknown-linux-gnu --release
        working-directory: ${{env.working-directory}}
#TODO: Include these builds once we upload keys into GH secrets, and once we can cross-build to macos
#      - name: build-macos
#        run: cross build --target x86_64-apple-darwin --release
#        working-directory: ${{env.working-directory}}
#      - name: par-create-linux
#        run: wash par create -a x86_64-linux -b ./target/x86_64-unknown-linux-gnu/release/LIB_WASCC_PROV.so -n PROVIDER -v waSCC -c wascc:PROVIDER -i ${{ secrets.WASCC_ACCOUNT }} -s ${{ secrets.WASCC_PROVIDER}} -o ./PROVIDER.par.gz --compress
#        working-directory: ${{env.working-directory}}
#     - name: par-add-macos
#        run: wash par insert -a x86_64-macos -b ./target/x86_64-apple-darwin/release/LIB_WASCC_PROV.dylib ./PROVIDER.par.gz -i ${{ secrets.WASCC_ACCOUNT }} -s ${{ secrets.WASCC_PROVIDER}}
#        working-directory: ${{env.working-directory}}
#      - name: publish-par
#        run: bill-young-cool-program-for-oci --push ./PROVIDER.par.gz
#        working-directory: ${{env.working-directory}}
      
