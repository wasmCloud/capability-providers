# Use this file in conjunction with the wasmcloud binary to launch a
# demonstration of the graph database capability provider. 
# You'll need to launch redisgraph, easiest way to do that is with
# this docker command:
#
# docker run --name redisgraph-test -d --rm -p 6379:6379 redislabs/redisgraph
#
# NOTE: your actor subject will change from this because you will use different
# signing keys.
#
# $ curl -X POST localhost:8081 (creates nodes/edges)
# $ curl localhost:8081 (retrieves some data in a sample query)
---
labels:
    sample: "wasmCloud GraphDB Example"
actors:
    - ./graph-actor/target/wasm32-unknown-unknown/release/graph_actor_signed.wasm
capabilities:
    - image_ref: wasmcloud.azurecr.io/redisgraph:0.3.2
      link_name: default
    - path: wasmcloud.azurecr.io/httpserver:0.12.1
      link_name: default
links:
    - actor: "MDSY2N2ALHIPBOL6W44KMOIHHKPD4CAMJMWAGXEIAHTPS7LLYQKSFZ2L"
      contract_id: "wasmcloud:graphdb"
      provider_id: "VDBU6VAJ6JSUEE6GCW7V37I6QN7NBR2Z3I4ZWCCSNMDDXYFGVCS2FHEG"
      values:
        URL: redis://127.0.0.1:6379
    - actor: "MDSY2N2ALHIPBOL6W44KMOIHHKPD4CAMJMWAGXEIAHTPS7LLYQKSFZ2L"
      contract_id: "wasmcloud:http_server"
      provider_id: "VAG3QITQQ2ODAOWB5TTQSDJ53XK3SHBEIFNK4AYJ5RKAX2UNSCAPHA5M"
      values:
        PORT: "8081"
